{"version":3,"sources":["webpack:///./src/app/pages/pros-list-category/pros-list-category.module.ts","webpack:///./src/app/pages/pros-list-category/pros-list-category.page.html","webpack:///./src/app/pages/pros-list-category/pros-list-category.page.scss","webpack:///./src/app/pages/pros-list-category/pros-list-category.page.ts"],"names":[],"mappings":"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","file":"pages-pros-list-category-pros-list-category-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ProsListCategoryPage } from './pros-list-category.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProsListCategoryPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [ProsListCategoryPage]\n})\nexport class ProsListCategoryPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar mode=\\\"ios\\\">\\n    <ion-buttons mode=\\\"md\\\" slot=\\\"start\\\">\\n      <ion-back-button mode=\\\"md\\\" text=\\\"\\\" icon=\\\"ios-arrow-back\\\" color=\\\"dark\\\"></ion-back-button>\\n    </ion-buttons>\\n    \\n    <ion-title>{{ subcategory_name }}</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-grid *ngIf=\\\"is_loading === true\\\" style=\\\"height: 100%; margin-bottom: 1rem\\\">\\n    <ion-row justify-content-center align-items-center style=\\\"height: 100%\\\">\\n      <ion-spinner name=\\\"bubbles\\\"></ion-spinner>\\n    </ion-row>\\n  </ion-grid>\\n\\n  <ion-grid *ngIf=\\\"is_loading === false\\\" style=\\\"height: 100%;\\\">\\n    <ion-list *ngIf=\\\"pros_list.length > 0 === true\\\">\\n      <div *ngFor=\\\"let item of pros_list\\\">\\n        <ion-item>\\n          <ion-avatar slot=\\\"start\\\" class=\\\"avatar\\\" (click)=\\\"goProfile (item?.dataGeneral)\\\">\\n            <img [src]=\\\"item?.dataGeneral.avatar\\\"/>\\n          </ion-avatar>\\n          <ion-label (click)=\\\"goProfile (item?.dataGeneral)\\\">\\n            <h2>{{ item?.dataGeneral.fullname }}</h2>\\n            <h3>I'm a big deal</h3>\\n            <!--p>Listen, I've had a pretty messed up day...</p-->\\n          </ion-label>\\n        </ion-item>\\n      </div>\\n    </ion-list>\\n  \\n    <ion-grid *ngIf=\\\"pros_list.length > 0 === false\\\" style=\\\"height: 100%; margin-bottom: 1rem\\\">\\n      <ion-row justify-content-center align-items-center style=\\\"height: 100%\\\">\\n        <ion-item text-center lines=\\\"none\\\">\\n          <ion-label text-wrap>\\n            <ion-text>\\n              <h3>No hay resultados</h3>\\n            </ion-text>\\n            <p>Ningun resultado con \\\"{{ subcategory_name }}\\\". intenta algo distinto</p>\\n          </ion-label>\\n        </ion-item>\\n      </ion-row>\\n    </ion-grid>\\n  </ion-grid>\\n</ion-content>\\n\\n<ion-footer>\\n  <ion-button expand=\\\"block\\\" color=\\\"dark\\\" fill=\\\"outline\\\" (click)=\\\"requestPros ()\\\">\\n    Hacer un cotizacion\\n  </ion-button>\\n</ion-footer>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3Byb3MtbGlzdC1jYXRlZ29yeS9wcm9zLWxpc3QtY2F0ZWdvcnkucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n// Services\nimport { DatabaseService } from '../../services/database.service';\nimport { StorageService } from '../../services/storage.service';  \n\n// Param\nimport { ActivatedRoute } from '@angular/router';\n\n// Ionic\nimport { ModalController, NavController } from '@ionic/angular'; \n\n// Geolocation\nimport { Geolocation } from '@ionic-native/geolocation/ngx';\n\n// Animations\nimport { myEnterAnimation } from '../../animations/enter';\nimport { myLeaveAnimation } from '../../animations/leave'; \n\n// Modal Page\nimport { RequestProPage } from '../../modals/request-pro/request-pro.page';\nimport { ProfilePage } from '../../modals/profile/profile.page';\nimport { ChatPage } from '../../modals/chat/chat.page';\n@Component({\n  selector: 'app-pros-list-category',\n  templateUrl: './pros-list-category.page.html',\n  styleUrls: ['./pros-list-category.page.scss'],\n})\nexport class ProsListCategoryPage implements OnInit {\n  subcategory_id: string;\n  subcategory_name: string;\n\n  pros_list: any [];\n  is_loading: boolean = true;\n  constructor(private route: ActivatedRoute,\n              private database: DatabaseService,\n              private navCtrl: NavController,\n              private modalCtrl: ModalController,\n              private geolocation: Geolocation,\n              private storage: StorageService) { }\n\n  async ngOnInit() {\n    this.subcategory_id = this.route.snapshot.paramMap.get ('subcategory_id');\n    this.subcategory_name = this.route.snapshot.paramMap.get ('subcategory_name');\n\n    await this.database.getProsBySubCategory (this.subcategory_id).subscribe ((response: any[]) => {\n      this.pros_list = response;\n      this.is_loading = false;\n\n      console.log (response);\n    });\n  }\n\n  async goProfile (item: any) {\n    const parms: any = {\n      profile_id: item.id,\n      to_confirm: false\n    };\n\n    const modal = await this.modalCtrl.create({\n      component: ProfilePage,\n      componentProps: parms,\n      mode: 'ios',\n      enterAnimation: myEnterAnimation,\n      leaveAnimation: myLeaveAnimation\n    });\n\n    modal.onDidDismiss ().then ((response: any) => {\n      if (response.role == 'response') {\n        \n      }\n    });\n\n    return await modal.present();\n  }\n\n  async requestPros () {\n    this.geolocation.getCurrentPosition().then(async (resp) => {\n      const parms: any = { \n        address: '',\n        latitude: resp.coords.latitude,\n        longitude: resp.coords.longitude,\n        subcategory_id: this.subcategory_id,\n        is_edit: false\n      };\n  \n      console.log (parms);\n  \n      const modal = await this.modalCtrl.create({\n        component: RequestProPage,\n        componentProps: parms,\n        mode: 'ios',\n        enterAnimation: myEnterAnimation,\n        leaveAnimation: myLeaveAnimation\n      });\n  \n      modal.onDidDismiss ().then ((response: any) => {\n        if (response.role === 'response') {\n          this.navCtrl.navigateForward ('request-view/' + response.data)\n        }\n      });\n  \n      await modal.present();\n    }).catch((error) => {\n      console.log ('Error getting location' + error);\n    });\n  }\n\n  async connectPro (profile: any) {\n    this.storage.getValue ('user_uid').then (async (user_id: string) => {\n      const parms: any = {\n        type: 'user',\n        sender: user_id,\n        receiver: profile.id,\n        _chat_id: ''\n      };\n\n      const modal = await this.modalCtrl.create({\n        component: ChatPage,\n        componentProps: parms,\n        mode: 'ios',\n        enterAnimation: myEnterAnimation,\n        leaveAnimation: myLeaveAnimation\n      });\n\n      return await modal.present();\n    });\n  }\n}\n"],"sourceRoot":""}