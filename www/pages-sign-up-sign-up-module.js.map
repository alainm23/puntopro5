{"version":3,"sources":["webpack:///./src/app/pages/sign-up/sign-up.module.ts","webpack:///./src/app/pages/sign-up/sign-up.page.html","webpack:///./src/app/pages/sign-up/sign-up.page.scss","webpack:///./src/app/pages/sign-up/sign-up.page.ts"],"names":[],"mappings":"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","file":"pages-sign-up-sign-up-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SignUpPage } from './sign-up.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SignUpPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [SignUpPage]\n})\nexport class SignUpPageModule {}\n","module.exports = \"<ion-header no-border>\\n  <ion-toolbar mode=\\\"ios\\\" no-border>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button text=\\\"\\\" icon=\\\"ios-arrow-back\\\" color=\\\"dark\\\"></ion-back-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding-left padding-right>\\n  <div padding text-center>\\n    <img class=\\\"logo-size\\\" src=\\\"assets/img/image-login.png\\\">\\n  </div>\\n\\n  <div text-center>\\n    <p class=\\\"text-white\\\"><i>Formulario de registro</i></p>\\n  </div>\\n\\n  <form [formGroup]=\\\"form\\\">\\n    <ion-item margin-top lines=\\\"none\\\" class=\\\"entry\\\">\\n      <ion-icon slot=\\\"start\\\" name=\\\"person\\\"></ion-icon>\\n      <ion-input formControlName=\\\"first_name\\\" type=\\\"text\\\" placeholder=\\\"Nombre completo\\\" clearInput=true></ion-input>\\n    </ion-item> \\n\\n    <div *ngIf=\\\"form.controls.first_name.errors?.required && form.controls.first_name.dirty\\\">\\n      <small class=\\\"text-white margin-left-1\\\">* Este campo es necesario</small>\\n    </div>\\n\\n    <ion-item margin-top lines=\\\"none\\\" class=\\\"entry\\\">\\n      <ion-icon slot=\\\"start\\\" name=\\\"person\\\"></ion-icon>\\n      <ion-input formControlName=\\\"last_name\\\" type=\\\"text\\\" placeholder=\\\"Apellidos\\\" clearInput=true></ion-input>\\n    </ion-item> \\n\\n    <div *ngIf=\\\"form.controls.last_name.errors?.required && form.controls.last_name.dirty\\\">\\n      <small class=\\\"text-white margin-left-1\\\">* Este campo es necesario</small>\\n    </div>\\n\\n    <ion-item margin-top lines=\\\"none\\\" class=\\\"entry\\\">\\n      <ion-icon slot=\\\"start\\\" name=\\\"mail\\\"></ion-icon>\\n      <ion-input formControlName=\\\"email\\\" type=\\\"text\\\" placeholder=\\\"Correo electrónico\\\" clearInput=true></ion-input>\\n    </ion-item> \\n\\n    <div *ngIf=\\\"form.controls.email.errors?.required && form.controls.email.dirty\\\">\\n      <small class=\\\"text-white margin-left-1\\\">* Este campo es necesario</small>\\n    </div>\\n\\n    <ion-item margin-top lines=\\\"none\\\" class=\\\"entry\\\">\\n      <ion-icon slot=\\\"start\\\" name=\\\"mail\\\"></ion-icon>\\n      <ion-input formControlName=\\\"confirmar_email\\\" type=\\\"text\\\" placeholder=\\\"Correo electrónico\\\" clearInput=true></ion-input>\\n    </ion-item>\\n    \\n    <div *ngIf=\\\"form.controls.confirmar_email.errors?.required && form.controls.confirmar_email.dirty\\\">\\n      <small class=\\\"text-white margin-left-1\\\">* Este campo es necesario</small>\\n    </div>\\n\\n    <div *ngIf=\\\"form.controls.confirmar_email.errors?.equalTo && form.controls.confirmar_email.dirty\\\">\\n      <small class=\\\"text-white margin-left-1\\\">* Los correos electronicos no coinciden</small>\\n    </div>\\n\\n    <ion-item margin-top lines=\\\"none\\\" class=\\\"entry\\\">\\n      <ion-icon slot=\\\"start\\\" name=\\\"lock\\\"></ion-icon>\\n      <ion-input formControlName=\\\"password\\\" type=\\\"password\\\" placeholder=\\\"********\\\" clearInput=true></ion-input>\\n    </ion-item>\\n\\n    <div *ngIf=\\\"form.controls.password.errors?.required && form.controls.password.dirty\\\">\\n      <small class=\\\"text-white margin-left-1\\\">* Este campo es necesario</small>\\n    </div>\\n\\n    <ion-item margin-top lines=\\\"none\\\" class=\\\"entry\\\">\\n      <ion-icon slot=\\\"start\\\" name=\\\"lock\\\"></ion-icon>\\n      <ion-input formControlName=\\\"confirmar_password\\\" type=\\\"password\\\" placeholder=\\\"********\\\" clearInput=true></ion-input>\\n    </ion-item>\\n\\n    <div *ngIf=\\\"form.controls.confirmar_password.errors?.required && form.controls.confirmar_password.dirty\\\">\\n      <small class=\\\"text-white margin-left-1\\\">* Este campo es necesario</small>\\n    </div>\\n\\n    <div *ngIf=\\\"form.controls.confirmar_password.errors?.equalTo && form.controls.confirmar_password.dirty\\\">\\n      <small class=\\\"text-white margin-left-1\\\">* Las contraseñas no coinciden</small>\\n    </div>\\n\\n    <ion-row class=\\\"action-css\\\">\\n      <ion-col size=\\\"8\\\">\\n        <ion-button color=\\\"violet\\\" expand=\\\"block\\\" [disabled]=\\\"!form.valid\\\" (click)=\\\"onSubmit ()\\\">\\n          CONECTAR\\n        </ion-button>\\n      </ion-col>\\n\\n      <ion-col size=\\\"2\\\">\\n        <ion-button color=\\\"violet\\\" expand=\\\"block\\\" (click)=\\\"facebook ()\\\">\\n          <ion-icon slot=\\\"icon-only\\\" name=\\\"logo-facebook\\\"></ion-icon>\\n        </ion-button>\\n      </ion-col>\\n\\n      <ion-col size=\\\"2\\\">\\n        <ion-button color=\\\"violet\\\" expand=\\\"block\\\" (click)=\\\"google ()\\\">\\n          <ion-icon slot=\\\"icon-only\\\" name=\\\"logo-google\\\"></ion-icon>\\n        </ion-button>\\n      </ion-col>\\n    </ion-row>\\n  </form>\\n</ion-content>\\n\"","module.exports = \".logo-size {\\n  width: 7rem; }\\n\\nion-content {\\n  --background: none;\\n  background-image: url(\\\"/assets/img/background-login.jpg\\\");\\n  background-position: center top;\\n  background-repeat: no-repeat;\\n  background-size: cover; }\\n\\n.entry ion-icon {\\n  color: #fff; }\\n\\n.entry {\\n  --border-radius: 4px;\\n  --background: #00000057;\\n  --color: #fff;\\n  margin-left: 1rem;\\n  margin-right: 1rem; }\\n\\n.action-css {\\n  padding: 0.6rem; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2FsYWluL1B1bnRvUHJvL1B1bnRvUHJvLUlvbmljNC9zcmMvYXBwL3BhZ2VzL3NpZ24tdXAvc2lnbi11cC5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXLEVBQUE7O0FBR2I7RUFDRSxrQkFBYTtFQUNiLHlEQUF5RDtFQUN6RCwrQkFBK0I7RUFDL0IsNEJBQTRCO0VBQzVCLHNCQUFzQixFQUFBOztBQUd4QjtFQUNFLFdBQVcsRUFBQTs7QUFHYjtFQUNFLG9CQUFnQjtFQUNoQix1QkFBYTtFQUNiLGFBQVE7RUFDUixpQkFBaUI7RUFDakIsa0JBQWtCLEVBQUE7O0FBR3BCO0VBQ0UsZUFBZSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvc2lnbi11cC9zaWduLXVwLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5sb2dvLXNpemUge1xuICB3aWR0aDogN3JlbTtcbn1cblxuaW9uLWNvbnRlbnQge1xuICAtLWJhY2tncm91bmQ6IG5vbmU7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnL2Fzc2V0cy9pbWcvYmFja2dyb3VuZC1sb2dpbi5qcGcnKTtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIHRvcDtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3Zlcjtcbn1cblxuLmVudHJ5IGlvbi1pY29uIHtcbiAgY29sb3I6ICNmZmY7XG59XG5cbi5lbnRyeSB7XG4gIC0tYm9yZGVyLXJhZGl1czogNHB4O1xuICAtLWJhY2tncm91bmQ6ICMwMDAwMDA1NztcbiAgLS1jb2xvcjogI2ZmZjtcbiAgbWFyZ2luLWxlZnQ6IDFyZW07XG4gIG1hcmdpbi1yaWdodDogMXJlbTtcbn1cblxuLmFjdGlvbi1jc3Mge1xuICBwYWRkaW5nOiAwLjZyZW07XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\n\n// Ionic\nimport { LoadingController, AlertController, NavController, ToastController } from '@ionic/angular';\n\n// Services\nimport { DatabaseService } from '../../services/database.service';\nimport { AuthService } from '../../services/auth.service';\n\n// Forms\nimport { FormGroup , FormControl, Validators } from '@angular/forms';\nimport { CustomValidators } from 'ng2-validation';\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.page.html',\n  styleUrls: ['./sign-up.page.scss'],\n})\nexport class SignUpPage implements OnInit {\n  form: FormGroup;\n  constructor(private loadingController: LoadingController,\n              private alertController: AlertController,\n              private toastController: ToastController,\n              private database: DatabaseService,\n              private auth: AuthService,\n              private navCtrl: NavController) { }\n\n  ngOnInit() {\n    const email = new FormControl ('', [Validators.required, Validators.email]);\n    const confirm_email = new FormControl ('', [Validators.required, Validators.email, CustomValidators.equalTo(email)]);\n\n    const password = new FormControl ('', Validators.required);\n    const confirm_password = new FormControl ('', [Validators.required, CustomValidators.equalTo(password)]);\n\n    this.form = new FormGroup ({\n      first_name: new FormControl ('', Validators.required),\n      last_name: new FormControl ('', Validators.required),\n      email: email,\n      confirmar_email: confirm_email,\n      password: password,\n      confirmar_password: confirm_password \n    });\n  }\n\n  async onSubmit () {\n    const loading = await this.loadingController.create({\n      message: 'Procesando Informacion ...'\n    });\n\n    await loading.present ();\n\n    const value = this.form.value;\n\n    this.auth.createUserWithEmailAndPassword (value.email, value.password)\n      .then (async (res: any) => {\n        const new_user: any = {\n          id: res.user.uid,\n          email: res.user.email,\n          join_date: new Date().toISOString (),\n          first_name: value.first_name,\n          last_name: value.last_name,\n          phone_number: '', \n          avatar: '',\n          is_pro: false,\n          actual_state: 'activo',\n          detail_state: ''\n        };\n\n        await this.database.addUser (new_user).then (async (response: any) => {\n          loading.dismiss ();\n\n          const toast = await this.toastController.create({\n            message: 'Bienvenido a PuntoPro',\n            duration: 2000,\n            position: 'top'\n          });\n\n          toast.present();\n\n          this.navCtrl.navigateRoot ('home');\n        }, error => {\n          loading.dismiss ();\n          console.log ('Add user error, ', error);\n        });\n      }, async (error: any) => {\n        loading.dismiss ();\n\n        let message;\n\n        if (error.code == \"auth/email-already-in-use\") {\n          message = \"Esta dirección de correo electrónico ya está siendo utilizada por otra persona.\"\n        } else if (error.code == \"auth/network-request-failed\") {\n          message = \"No tienes acceso a internet, no se puede proceder.\"\n        } else {\n          message = error.message;\n        }\n\n        let alert = await this.alertController.create({\n          header: 'Opppps!',\n          message: message,\n          buttons: ['OK']\n        });\n\n        await alert.present();\n      });\n  }\n\n  google () {\n    this.auth.googleLogin ();\n  }\n\n  facebook () {\n    this.auth.facebookLogin ();\n  }\n}\n"],"sourceRoot":""}