{"version":3,"sources":["webpack:///./src/app/pages/messages/messages.module.ts","webpack:///./src/app/pages/messages/messages.page.html","webpack:///./src/app/pages/messages/messages.page.scss","webpack:///./src/app/pages/messages/messages.page.ts"],"names":[],"mappings":"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","file":"pages-messages-messages-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { MessagesPage } from './messages.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MessagesPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [MessagesPage]\n})\nexport class MessagesPageModule {}\n","module.exports = \"<ion-header no-border>\\n  <ion-toolbar mode=\\\"ios\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button text=\\\"\\\" icon=\\\"ios-arrow-back\\\" color=\\\"dark\\\"></ion-back-button>\\n    </ion-buttons>\\n\\n    <ion-title>\\n      <img class=\\\"wordmark-size\\\" src=\\\"/assets/img/PuntoPro-wordmark.png\\\">\\n    </ion-title>\\n  </ion-toolbar>\\n  \\n  <ion-toolbar mode=\\\"ios\\\">\\n    <ion-title>\\n      Inbox\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-grid *ngIf=\\\"is_loading === true\\\" style=\\\"height: 100%; margin-bottom: 1rem\\\">\\n    <ion-row justify-content-center align-items-center style=\\\"height: 100%\\\">\\n      <ion-spinner name=\\\"bubbles\\\"></ion-spinner>\\n    </ion-row>\\n  </ion-grid> \\n\\n  <ion-grid *ngIf=\\\"is_loading === false\\\">\\n    <ion-list *ngIf=\\\"list.length > 0 === true\\\">\\n      <div *ngFor=\\\"let item of list\\\">\\n        <ion-item (click)=\\\"goChat (item?.data)\\\">\\n          <ion-avatar class=\\\"avatar\\\" slot=\\\"start\\\">\\n            <img [src]=\\\"item?.dataGeneral.avatar\\\"/>\\n          </ion-avatar>\\n          <ion-label>\\n            <h2>{{ item?.dataGeneral.fullname }}</h2>\\n            <!--h3>I'm a big deal</h3-->\\n            <!--p>Listen, I've had a pretty messed up day...</p-->\\n          </ion-label>\\n\\n          <ion-button fill=\\\"clear\\\" slot=\\\"end\\\" color=\\\"dark\\\">\\n            <ion-icon slot=\\\"icon-only\\\" name=\\\"ios-arrow-forward\\\"></ion-icon>\\n          </ion-button>\\n        </ion-item>\\n      </div>\\n    </ion-list>\\n\\n    <ion-grid *ngIf=\\\"list.length > 0 === false\\\">\\n      <ion-row>\\n        <ion-col>\\n          <ion-item lines=\\\"none\\\" text-center>\\n            <ion-label>\\n              <h1>Ningun chat</h1>\\n              <h4>...</h4>\\n            </ion-label>\\n          </ion-item>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </ion-grid>\\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL21lc3NhZ2VzL21lc3NhZ2VzLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n// Param\nimport { ActivatedRoute } from '@angular/router';\n\n// Ionic \nimport { ModalController } from '@ionic/angular'; \n\n// Services\nimport { StorageService  } from '../../services/storage.service';\nimport { DatabaseService  } from '../../services/database.service';\n\n// Animations\nimport { myEnterAnimation } from '../../animations/enter';\nimport { myLeaveAnimation } from '../../animations/leave'; \n\n// Modal Page\nimport { ChatPage } from '../../modals/chat/chat.page';\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.page.html',\n  styleUrls: ['./messages.page.scss'],\n})\nexport class MessagesPage implements OnInit {\n  user_type: string;\n  list: any[];\n  is_loading: boolean = true;\n  constructor(private database: DatabaseService,\n              private storage: StorageService,\n              private modalCtrl: ModalController,\n              private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.user_type = this.route.snapshot.paramMap.get ('user_type');\n\n    this.storage.getValue ('user_uid').then (user_id => {\n      if (this.user_type === 'pro') {\n\n        this.database.getProChatList (user_id).subscribe (response => {\n          this.list = response;\n          this.is_loading = false;\n          console.log (response);\n        });\n      } else {\n        this.database.getUserChatList (user_id).subscribe (response => {\n          this.list = response;\n          this.is_loading = false;\n          console.log (response);\n        });\n      }\n    });\n  }\n\n  async goChat (data: any) {\n    let parms: any;\n    if (this.user_type === 'pro') {\n      parms = {\n        type: this.user_type,\n        sender: data.pro_id,\n        receiver: data.user_id,\n        _chat_id: data.chat_id\n      };\n    } else {\n      parms = {\n        type: this.user_type,\n        sender: data.user_id,\n        receiver: data.pro_id,\n        _chat_id: data.chat_id\n      };\n    }\n    \n    const modal = await this.modalCtrl.create({\n      component: ChatPage,\n      componentProps: parms,\n      mode: 'ios',\n      enterAnimation: myEnterAnimation,\n      leaveAnimation: myLeaveAnimation\n    });\n\n    return await modal.present();\n  }\n}\n"],"sourceRoot":""}